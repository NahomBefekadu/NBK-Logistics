const { DB } = require("./config");
const { Pool } = require("pg");

const createCategory = `CREATE TABLE IF NOT EXISTS category (
    category_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    category_name VARCHAR(100) NULL,
   PRIMARY KEY (category_id));`;
const createWarehouse = `    
CREATE TABLE IF NOT EXISTS warehouse (
    warehouse_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    warehouse_name VARCHAR(100) NULL,
    PRIMARY KEY (warehouse_id));`;
const createSupplier = `CREATE TABLE IF NOT EXISTS supplier (
    supplier_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    supplier_name VARCHAR(100) NULL,
    address VARCHAR(150) NULL,
    PRIMARY KEY (Supplier_id));`;

const createItems = `
CREATE TABLE IF NOT EXISTS product (
    product_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    product_name VARCHAR(100) NULL,
    description VARCHAR(450) NULL,
    sku VARCHAR(60) NULL,
    price DECIMAL(6,2) NOT NULL,
    category INT NOT NULL,
    stock INT NOT NULL,
    location INT NOT NULL,
    supplier INT NOT NULL,
    PRIMARY KEY (product_id),
    FOREIGN KEY (category) REFERENCES category(category_id),
    FOREIGN KEY (supplier) REFERENCES supplier(supplier_id),
    FOREIGN KEY (location) REFERENCES warehouse(warehouse_id));
`;

const start = async () => {
  try {
    const pool = new Pool({
      user: DB.PGUSER,
      host: DB.PGHOST,
      database: DB.PGDATABASE,
      password: DB.PGPASSWORD,
      port: DB.PGPORT,
    });
    const start = Date.now();
    await pool.connect();
    await pool.query(createCategory);
    await pool.query(createWarehouse);
    await pool.query(createSupplier);
    await pool.query(createItems);

    const duration = Date.now() - start;
    console.log({ msg: "executed query", duration });
    await pool.end();
  } catch (error) {
    console.log({ msg: "Database could not be setup", error });
    await pool.end();
  }
};

start();
